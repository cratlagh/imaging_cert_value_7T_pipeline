#!/bin/bash
#
## Written by K. Garner, based on http://reproducibility.stanford.edu/bids-tutorial-series-part-1b/
# start

set -e # this command causes the script to exit on error
####################################################################################################
#### Defining pathways
####################################################################################################
rawloc=/QRISdata/Q1240/CAI/Research_19028_ATTLEARN
outpath=/30days/uqkgarn1/IMMVALCERT
niidir=/30days/uqkgarn1/IMMVALCERT
logdir=/30days/uqkgarn1/IMMVALCERTLOGS
####################################################################################################

####################################################################################################
#### copy over data from collection to scratch
####################################################################################################
subjs=(1)
ses=(2)

for subj in "${subjs[@]}"; do
    
    for sess in "${ses[@]}"; do
        raw_fName=$(find ${rawloc}/ -name "sub-0${subj}_*") 
        echo "${raw_fName}"
        if [ -z "${raw_fName}" ]
        then 
            echo "raw files folder not found"
            exit 1
        fi
        echo "${outpath}"
        if [ -z "${outpath}" ]
        then 
            echo "output path not found"
            exit 1
        fi
        rsync -rv "${raw_fName}" "${outpath}"
    done
done


##################################################################################################
## Anatomical Organization ####
##################################################################################################
subjs=(1)
ses=(2)
fname=("*mp2rage_0.75iso_7t_uni-den")

for subj in "${subjs[@]}"; do
    
    for sess in "${ses[@]}"; do
    echo "Processing subject $subj session $sess"

    ###Create structure
    mkdir -p "${niidir}/sub-0${subj}/ses-0${sess}/anat"

    ### extract images of interest
    for z in *mp2rage_*_uni-den.zip; do
        # get folder name for subjects dcm data
        dcm_fName=$(find "${niidir}/" -name "sub-0${subj}_*") 
		echo  "${dcm_fName}"
        unzip -d "${niidir}/sub-0${subj}/ses-0${sess}/anat" ${dcm_fName}/$z 
    done

    # convert to nii + BIDS
    ./dcm2niix -o ${niidir}/sub-0${subj}/ses-0${sess}/anat -f sub-0${subj}_ses-0${sess}_T1w ${niidir}/sub-0${subj}/ses-0${sess}/anat
    rm ${niidir}/sub-0${subj}/ses-0${sess}/anat/*/*.ima  # this may not work across subjects beyond #1 as the mp2 rage was received differently
done
done

####################################################################################################
#### Functional Organisation ####
####################################################################################################

subjs=(1)
ses=(2)
runs=(1,2,3)

for subj in "${subjs[@]}"; do

    for sess in "${ses[@]}"; do

        mkdir -p ${niidir}/sub-0${subj}/ses-0${sess}/func

        for run in "${runs[@]}"; do
            
			z=$(printf '*cmrr_att_learn_run0%d.zip' "run")
            fname=$(find ${niidir}/sub-0${subj}_*/${z})
            new_name=$(basename $fname)
            new_name=$(echo $new_name | rev | cut -f 2- -d '.' | rev)
			echo "${new_name}"
            unzip "${fname}" -d "${niidir}/sub-0${subj}/ses-0${sess}/${new_name}"
            ./dcm2niix -o ${niidir}/sub-0${subj}/ses-0${sess} -f sub-0${subj}_ses-0${sess}_%p ${niidir}/sub-0${subj}/ses-0${sess}/${new_name}

        done
    done
done

# # now the physiological data
# for subj in "${subjs[@]}"; do

#     for sess in "${ses[@]}"; do

#         for run in "${runs[@]}"; do
            
# 			z=$(printf '*cmrr_att_learn_run0%d_physiolog.zip' "run")
#             fname=$(find ${niidir}/KEL-0${subj}_*/${z})
#             new_name=$(basename $fname)
#             new_name=$(echo $new_name | rev | cut -f 2- -d '.' | rev)
#             echo "$new_name"
#             unzip ${fname} -d ${niidir}/sub-0${subj}/ses-0${sess}/${new_name} 
# 			./dcm2niix -o ${niidir}/sub-0${subj}/ses-0${sess} -f sub-0${subj}_ses-0${sess}_physiolog_%p ${niidir}/sub-0${subj}/ses-0${sess}/${new_name}
#         done
#     done
# done

# # now rename and move the files

# for subj in "${subjs[@]}"; do

#     for sess in "${ses[@]}"; do

#         for run in "${runs[@]}"; do

# 			TR=1510
			
 
#  		    z=$(printf '*cmrr_att_learn_run0%d.zip' "run")
#             # json (bold) file
#             fname_json=$(find ${niidir}/sub-0${subj}/ses-0${sess}/sub-0${subj}_ses-0${sess}_${z}.json)
# 			echo "${fname_json}"
#             mv ${fname_json} ${niidir}/sub-0${subj}/ses-0${sess}/func/sub-0${subj}_ses-0${sess}_task-learnAtt_acq-TR${TR}_run-0${run}_bold.json
#             # nii (bold) file
#             fname_nii=$(find ${niidir}/sub-0${subj}/ses-0${sess}/sub-0${subj}_ses-0${sess}_${z}.nii)
#             mv ${fname_nii} ${niidir}/sub-0${subj}/ses-0${sess}/func/sub-0${subj}_ses-0${sess}_task-learnAtt_acq-TR${TR}_run-0${run}_bold.nii
			
# 			# physiological file 
# 			p=$(printf '*cmrr_att_learn_run0%d_physiolog.zip' "run")
#             fname_physiolog_nii=$(find ${niidir}/sub-0${subj}/ses-0${sess}/sub-0${subj}_ses-0${sess}_physiolog_${p}.nii)
#             fname_physiolog_json=$(find ${niidir}/sub-0${subj}/ses-0${sess}/sub-0${subj}_ses-0${sess}_physiolog_${p}.json)
# 			echo "${fname_physiolog_json}"
#             mv ${fname_physiolog_json} ${niidir}/sub-0${subj}/ses-0${sess}/func/sub-0${subj}_ses-0${sess}_task-learnAtt_acq-TR${TR}_run-0${run}_physiol.json
#             mv ${fname_physiolog_nii} ${niidir}/sub-0${subj}/ses-0${sess}/func/sub-0${subj}_ses-0${sess}_task-learnAtt_acq-TR${TR}_run-0${run}_physiol.nii

#             ## now copy the relevant event file
#             # cp ${logdir}/sub-0${subj}/ses-0${sess}/func/sub-0${subj}_ses-0${sess}_task-learnAtt_acq-TR${TR}_events.tsv ${niidir}/sub-0${subj}/ses-0${sess}/func/sub-0${subj}_ses-0${sess}_task-learnAtt_acq-TR${TR}_events.tsv
#         done
#     done
# done

# # ####################################################################################################
# # #### Remove unneeded files ####
# # ####################################################################################################

# for subj in "${subjs[@]}"; do

#     for sess in "${ses[@]}"; do

#         rm -rv ${niidir}/sub-0${subj}/ses-0${sess}/*cmrr*
#         rm -rv ${niidir}/SUB-0${subj}_SES-0${sess}_*

#     done
# done

# # ####################################################################################################
# # #### copy back to original location ####
# # ####################################################################################################
# for subj in "${subjs[@]}"; do

#     zip -r "${niidir}/sub-0${subj}.zip" "${niidir}/sub-0${subj}"
#     rsync -rv "${niidir}/sub-0${subj}.zip" "${rawloc}"
# done